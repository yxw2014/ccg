# -*- coding: utf-8 -*-
import sys
import os
import random
import time
import json
from errors import err
#<class 'model.BaseModel.BaseModel'>
from model.BaseModel import BaseModel
from model.RoomModel import RoomModel
from pymongo.errors import AutoReconnect
						
class FightModel(BaseModel): 
	#status
	STATUS_DASH, STATUS_PROTECTOR= range(1, 3)
	
	
	def __init__(self): 
		super(FightModel, self).__init__()
		
	'''
	攻击次数
	'''		
	@classmethod
	def checkAttackerAtkTime(self, card):
		if isinstance(card, dict)== False:
			return False
		time= card.get('currentAtkTime')
		if time== None or int(time)< 1:
			return False
		
		return True
		
	
	'''
	冲锋
	'''		
	@classmethod
	def checkAttackerStatusDash(self, card):
		if isinstance(room, dict)== False or uniqid== None or (pos!=1 and pos!= 2):
			return False
		 	
	'''
	嘲讽
	'''		
	@classmethod
	def checkTargetStatusProtector(self, room,  pos, target): 	
		if isinstance(room, dict)== False or isinstance(target, int)== False or uniqid== None or (pos!=1 and pos!= 2):
			return False
		
		if pos== 1:
			target_pos= 2
			cards= room['cardPlay2']
		elif pos== 2:
			target_pos= 1
			cards= room['cardPlay1']
			
		ret= []	
		for k, c in enumerate(cards):
			if c.get('status')== self.STATUS_PROTECTOR:
				ret.append(c.get('uniqid'))
				
		if ret.count(target)> 0:
			return True
				
		return False
			
			
		
			
			
			
			
			
			
			
			
			
			
		
		
		
