# -*- coding: utf-8 -*-
import sys
import os
import random
import time
import json
from pprint import pprint
from errors import err
#<class 'model.BaseModel.BaseModel'>
from model.BaseModel import BaseModel
from model.RoomModel import RoomModel
from model.FightModel import FightModel
from pymongo.errors import AutoReconnect
						
class EffectModel(BaseModel): 
	def __init__(self): 
		super(EffectModel, self).__init__()	
	#冲锋
	@classmethod		
	def doEffectDash(self, room, pos, uniqid, effect):
		if isinstance(room, dict)== False or uniqid== None or isinstance(effect, dict)== False or uniqid== None or (pos!=1 and pos!= 2):
			return False
		if pos== 1 and len(room['cardPlay1'])>0 :
			room['cardPlay1'][-1]['status']= FightModel.STATUS_DASH 
			room['cardPlay1'][-1]['skill'].append(effect['skill_id'])
		elif pos== 2 and len(room['cardPlay2'])>0 :
			room['cardPlay2'][-1]['status']= FightModel.STATUS_DASH 
			room['cardPlay1'][-1]['skill'].append(effect['skill_id'])
		else:
			return False
		
		return True
	
	@classmethod		
	def doEffectProtector(self, room, pos, uniqid, effect):
		if isinstance(room, dict)== False or uniqid== None or isinstance(effect, dict)== False or uniqid== None or (pos!=1 and pos!= 2):
			return False
		if pos== 1 and len(room['cardPlay1'])>0 :
			room['cardPlay1'][-1]['status']= FightModel.STATUS_PROTECTOR 
			room['cardPlay1'][-1]['skill'].append(effect['skill_id'])
		elif pos== 2 and len(room['cardPlay2'])>0 :
			room['cardPlay2'][-1]['status']= FightModel.STATUS_PROTECTOR 
			room['cardPlay1'][-1]['skill'].append(effect['skill_id'])
		else:
			return False
		
		return True
	
	@classmethod		
	def doEffectCrystal(self, room, pos, uniqid, effect):
		if isinstance(room, dict)== False or uniqid== None or isinstance(effect, dict)== False or uniqid== None or (pos!=1 and pos!= 2):
			return False
		if pos== 1 and len(room['cardPlay1'])>0 :
			room['crystal1']= room['crystal1']+ 1 
			room['cardPlay1'][-1]['skill'].append(effect['skill_id'])
		elif pos== 2 and len(room['cardPlay2'])>0 :
			room['crystal2'][-1]['status']= room['crystal2']+ 1 
			room['cardPlay1'][-1]['skill'].append(effect['skill_id'])
		else:
			return False
		
		return True
		
		
